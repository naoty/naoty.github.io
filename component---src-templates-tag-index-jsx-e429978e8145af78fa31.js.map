{"version":3,"sources":["webpack:///./src/templates/tag/index.jsx"],"names":["links","title","path","Tag","data","location","tag","basename","pathname","allMarkdownRemark","edges","map","index","node","key","frontmatter","href","fileAbsolutePath","tags","query"],"mappings":"8NAUMA,EAAQ,CACZ,CAAEC,MAAO,MAAOC,KAAM,KACtB,CAAED,MAAO,QAASC,KAAM,YAGpBC,EAAG,2GAIM,sBAAyB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChBC,EAAMJ,IAAKK,SAASF,EAASG,UACnC,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KAAW,YAACL,EAAD,SAAOG,IAClB,YAAC,IAAD,KACGF,EAAKK,kBAAkBC,MAAMC,IAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OAChC,YAAC,IAAD,CACEC,IAAKF,EACLX,MAAOY,EAAKE,YAAYd,MACxBe,KAAI,UAAYd,IAAKK,SAASM,EAAKI,iBAAkB,OAAjD,QACJC,KAAML,EAAKE,YAAYG,MAAQ,QAGrC,YAAC,IAAD,CAAYlB,MAAOA,MAKlB,IAAMmB,EAAK","file":"component---src-templates-tag-index-jsx-e429978e8145af78fa31.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Container from \"../../components/Container\";\nimport List from \"../../components/List\";\nimport ListItem from \"../../components/ListItem\";\nimport Navigation from \"../../components/Navigation\";\nimport PageTitle from \"../../components/PageTitle\";\nimport path from \"path\";\nimport styled from \"@emotion/styled\";\n\nconst links = [\n  { title: \"Top\", path: \"/\" },\n  { title: \"Posts\", path: \"/posts/\" }\n];\n\nconst Tag = styled.span`\n  font-family: Source Code Pro, monospace;\n`;\n\nexport default ({ data, location }) => {\n  const tag = path.basename(location.pathname);\n  return (\n    <Container>\n      <PageTitle><Tag>#{tag}</Tag></PageTitle>\n      <List>\n        {data.allMarkdownRemark.edges.map(({ node }, index) => (\n          <ListItem\n            key={index}\n            title={node.frontmatter.title}\n            href={`/posts/${path.basename(node.fileAbsolutePath, \".md\")}.html`}\n            tags={node.frontmatter.tags || []} />\n        ))}\n      </List>\n      <Navigation links={links} />\n    </Container>\n  );\n}\n\nexport const query = graphql`\n  query TaggedPostsQuery($tag: String!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { tags: { eq: $tag } } },\n      sort: { fields: [frontmatter___time], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            tags\n          }\n          fileAbsolutePath\n        }\n      }\n    }\n    sitePage {\n      path\n    }\n  }\n`;\n"],"sourceRoot":""}