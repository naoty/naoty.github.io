{"version":3,"sources":["webpack:///./src/pages/posts/index.jsx"],"names":["links","title","path","data","description","url","site","siteMetadata","rootURL","imageURL","allMarkdownRemark","edges","map","index","node","key","frontmatter","href","basename","fileAbsolutePath","tags","query"],"mappings":"+NAUMA,EAAQ,CACZ,CAAEC,MAAO,MAAOC,KAAM,MAGT,0BAAGC,EAAH,EAAGA,KAAH,OACb,YAAC,IAAD,KACE,YAAC,IAAD,CACEF,MAAM,uBACNG,YAAY,uBACZC,IAAQF,EAAKG,KAAKC,aAAaC,QAA5B,UACHC,SAAaN,EAAKG,KAAKC,aAAaC,QAA5B,uBAGV,YAAC,IAAD,cACA,YAAC,IAAD,KACGL,EAAKO,kBAAkBC,MAAMC,IAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OAChC,YAAC,IAAD,CACEC,IAAKF,EACLZ,MAAOa,EAAKE,YAAYf,MACxBgB,KAAI,UAAYf,IAAKgB,SAASJ,EAAKK,iBAAkB,OAAjD,QACJC,KAAMN,EAAKE,YAAYI,MAAQ,QAGrC,YAAC,IAAD,CAAYpB,MAAOA,MAIhB,IAAMqB,EAAK","file":"component---src-pages-posts-index-jsx-ad8bffa2f0f5d7e624d9.js","sourcesContent":["import React from \"react\";\nimport path from \"path\";\nimport { graphql } from \"gatsby\";\nimport Container from \"../../components/Container\";\nimport Head from \"../../components/Head\";\nimport List from \"../../components/List\";\nimport ListItem from \"../../components/ListItem\";\nimport Navigation from \"../../components/Navigation\";\nimport PageTitle from \"../../components/PageTitle\";\n\nconst links = [\n  { title: \"Top\", path: \"/\" }\n];\n\nexport default ({ data }) => (\n  <Container>\n    <Head\n      title=\"Naoto Kaneko's posts\"\n      description=\"Naoto Kaneko's posts\"\n      url={`${data.site.siteMetadata.rootURL}/posts/`}\n      imageURL={`${data.site.siteMetadata.rootURL}/icons/256x256.png`}\n    />\n\n    <PageTitle>Posts</PageTitle>\n    <List>\n      {data.allMarkdownRemark.edges.map(({ node }, index) => (\n        <ListItem\n          key={index}\n          title={node.frontmatter.title}\n          href={`/posts/${path.basename(node.fileAbsolutePath, \".md\")}.html`}\n          tags={node.frontmatter.tags || []} />\n      ))}\n    </List>\n    <Navigation links={links} />\n  </Container>\n);\n\nexport const query = graphql`\n  query PostsQuery {\n    site {\n      siteMetadata {\n        rootURL\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___time], order: DESC }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            tags\n          }\n          fileAbsolutePath\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}