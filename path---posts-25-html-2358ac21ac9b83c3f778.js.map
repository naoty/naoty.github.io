{"version":3,"sources":["webpack:///path---posts-25-html-2358ac21ac9b83c3f778.js","webpack:///./.cache/json/posts-25-html.json"],"names":["webpackJsonp","398","module","exports","data","site","siteMetadata","rootURL","markdownRemark","frontmatter","title","time","description","html","fileAbsolutePath","pathContext","id"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,QAAA,4BAAqCC,gBAAmBC,aAAeC,MAAA,sBAAAC,KAAA,2BAAAC,YAAA,MAAmFC,KAAA,41CAAyyCC,iBAAA,yBAA0IC,aAAgBC,GAAA","file":"path---posts-25-html-2358ac21ac9b83c3f778.js","sourcesContent":["webpackJsonp([81300252811283],{\n\n/***/ 398:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"rootURL\":\"https://naoty.github.io\"}},\"markdownRemark\":{\"frontmatter\":{\"title\":\"webpackerにjestを導入する\",\"time\":\"2018-03-20T19:56:00+0900\",\"description\":null},\"html\":\"<p>webpackerを使ったRailsプロジェクトにjestを導入してみた。jestをインストールしてテストを実行してみると、以下のようなエラーがおきた。</p>\\n<pre><code>({\\\"Object.&#x3C;anonymous>\\\":function(module,exports,require,__dirname,__filename,global,jest){import xxx from './xxx';\\n                                                                                         ^^^^^^\\n\\nSyntaxError: Unexpected token import\\n  at ScriptTransformer._transformAndBuildScript (node_modules/jest-runtime/build/script_transformer.js:316:17)\\n</code></pre>\\n<p>importがコンパイルできていないようだ。webpackerが生成する<code>.babelrc</code>では、以下のように設定されている。</p>\\n<pre><code class=\\\"language-json\\\">{\\n  \\\"presets\\\": [\\n    [\\\"env\\\", {\\n      \\\"modules\\\": false,\\n      \\\"targets\\\": {\\n        \\\"browsers\\\": \\\"> 1%\\\",\\n        \\\"uglify\\\": true\\n      },\\n      \\\"useBuiltIns\\\": true\\n    }],\\n    \\\"react\\\"\\n  ]\\n}\\n</code></pre>\\n<p><code>\\\"modules\\\": false</code>と設定されているため、<code>import</code>の変換が行われないようになっている。これはwebpackによって<code>import</code>文を処理するためにbabelでは<code>import</code>の変換を行わないようにしているんだと思う。</p>\\n<p>しかし、jestを実行する場合はwebpackによる処理は行われないため、<code>import</code>が変換されずエラーになっていたと考えられそう。</p>\\n<p>そこで、以下の設定を<code>.babelrc</code>に追加したところ直った。</p>\\n<pre><code class=\\\"language-json\\\">{\\n  \\\"env\\\": {\\n    \\\"test\\\": {\\n      \\\"presets\\\": [\\n        [\\\"env\\\", { \\\"modules\\\": \\\"commonjs\\\" }]\\n      ]\\n    }\\n  }\\n}\\n</code></pre>\\n<p>jestは実行時に自動的に<code>NODE_ENV</code>を<code>test</code>に設定するため、これでうまくいく。</p>\",\"fileAbsolutePath\":\"contents/posts/25.md\"}},\"pathContext\":{\"id\":\"contents/posts/25.md absPath of file >>> MarkdownRemark\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---posts-25-html-2358ac21ac9b83c3f778.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"rootURL\":\"https://naoty.github.io\"}},\"markdownRemark\":{\"frontmatter\":{\"title\":\"webpackerにjestを導入する\",\"time\":\"2018-03-20T19:56:00+0900\",\"description\":null},\"html\":\"<p>webpackerを使ったRailsプロジェクトにjestを導入してみた。jestをインストールしてテストを実行してみると、以下のようなエラーがおきた。</p>\\n<pre><code>({\\\"Object.&#x3C;anonymous>\\\":function(module,exports,require,__dirname,__filename,global,jest){import xxx from './xxx';\\n                                                                                         ^^^^^^\\n\\nSyntaxError: Unexpected token import\\n  at ScriptTransformer._transformAndBuildScript (node_modules/jest-runtime/build/script_transformer.js:316:17)\\n</code></pre>\\n<p>importがコンパイルできていないようだ。webpackerが生成する<code>.babelrc</code>では、以下のように設定されている。</p>\\n<pre><code class=\\\"language-json\\\">{\\n  \\\"presets\\\": [\\n    [\\\"env\\\", {\\n      \\\"modules\\\": false,\\n      \\\"targets\\\": {\\n        \\\"browsers\\\": \\\"> 1%\\\",\\n        \\\"uglify\\\": true\\n      },\\n      \\\"useBuiltIns\\\": true\\n    }],\\n    \\\"react\\\"\\n  ]\\n}\\n</code></pre>\\n<p><code>\\\"modules\\\": false</code>と設定されているため、<code>import</code>の変換が行われないようになっている。これはwebpackによって<code>import</code>文を処理するためにbabelでは<code>import</code>の変換を行わないようにしているんだと思う。</p>\\n<p>しかし、jestを実行する場合はwebpackによる処理は行われないため、<code>import</code>が変換されずエラーになっていたと考えられそう。</p>\\n<p>そこで、以下の設定を<code>.babelrc</code>に追加したところ直った。</p>\\n<pre><code class=\\\"language-json\\\">{\\n  \\\"env\\\": {\\n    \\\"test\\\": {\\n      \\\"presets\\\": [\\n        [\\\"env\\\", { \\\"modules\\\": \\\"commonjs\\\" }]\\n      ]\\n    }\\n  }\\n}\\n</code></pre>\\n<p>jestは実行時に自動的に<code>NODE_ENV</code>を<code>test</code>に設定するため、これでうまくいく。</p>\",\"fileAbsolutePath\":\"contents/posts/25.md\"}},\"pathContext\":{\"id\":\"contents/posts/25.md absPath of file >>> MarkdownRemark\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/posts-25-html.json\n// module id = 398\n// module chunks = 81300252811283"],"sourceRoot":""}