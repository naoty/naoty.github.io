{"componentChunkName":"component---src-templates-post-jsx","path":"/posts/54.html","webpackCompilationHash":"062646e33341915f481f","result":{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"Result型の返り値を使わないとき","time":"2019-01-05T17:09:00+0900","description":null,"tags":["rust"]},"html":"<p>以下のように<code class=\"language-text\">Result</code>型を返すメソッドの返り値を使わないと、コンパイラが<code class=\"language-text\">unused `std::result::Result` that must be used</code>のような警告を出す。</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\">process<span class=\"token punctuation\">::</span>Command<span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">Result</code>型を返すメソッドが失敗したとき、返り値を使わないとそれに気づくことができないため、必ず返り値を使うようにコンパイラが警告してくれる。</p>\n<p>返り値を使わないときは<code class=\"language-text\">expect</code>を使う。このメソッドは<code class=\"language-text\">Result</code>が<code class=\"language-text\">Ok</code>であれば値を返し、<code class=\"language-text\">Err</code>であれば引数のメッセージを表示してpanicを起こす。</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\">process<span class=\"token punctuation\">::</span>Command<span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>あるいは、<code class=\"language-text\">?</code>オペレータを使ってエラーをそのまま呼び出し元に転送することもできる。</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function\">execute_ls</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> io<span class=\"token punctuation\">::</span>Result<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    process<span class=\"token punctuation\">::</span>Command<span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","fileAbsolutePath":"/home/circleci/project/contents/posts/54.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"5c40d12c-73a0-5b70-b694-2fdc58c4ed92"}}}