{"componentChunkName":"component---src-templates-post-jsx","path":"/posts/28.html","webpackCompilationHash":"a55fee11bd5bfee29972","result":{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"awscliのwaitコマンドが便利だった","time":"2018-04-22T09:55:00+0900","description":"waitコマンドによってデプロイスクリプトが簡単に書けるようになった話です","tags":["aws"]},"html":"<p>ECSにデプロイするスクリプトを書くとき、<code class=\"language-text\">wait</code>コマンドがとても便利だった。</p>\n<p>デプロイする前にいくつかのECSタスクを実行し完了を待ってからデプロイしたい場合、ECSタスクのステータスをポーリングして完了したかどうかを監視する必要がある。<code class=\"language-text\">aws ecs run-task</code>は即座に終了し、タスクの実行自体は非同期に行われるからだ。</p>\n<p>そうしたとき、<code class=\"language-text\">wait</code>コマンドを使うと簡単にポーリングを行うことができる。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">aws ecs <span class=\"token function\">wait</span> tasks-stopped --tasks <span class=\"token variable\">${task_arn1}</span> <span class=\"token variable\">${task_arn2}</span></code></pre></div>\n<p>これは<code class=\"language-text\">aws ecs describe-tasks</code>を定期的に実行してレスポンスからステータスを取得し、それが完了するまで待つ。<code class=\"language-text\">--tasks</code>オプションはECSタスクのARNを複数指定できるので、複数のタスクがすべて完了するのを待つことができる。</p>\n<p>ECSタスクのARNは<code class=\"language-text\">aws ecs run-task</code>のレスポンスから取得できる。実際にはこんな感じで書くと思う。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">task_arn1</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>aws ecs run-task <span class=\"token punctuation\">\\</span>\n  --task-definition my-task-definition <span class=\"token punctuation\">\\</span>\n  --query <span class=\"token string\">\"tasks[0].taskArn\"</span> <span class=\"token punctuation\">\\</span>\n  --output text<span class=\"token variable\">)</span></span>\n\naws ecs <span class=\"token function\">wait</span> tasks-stopped --tasks <span class=\"token variable\">${task_arn1}</span></code></pre></div>\n<p>気をつける必要があるのは、ECSタスクが完了したかどうかは分かるものの、それが成功したのか失敗したのかは分からないということだ。なので、<code class=\"language-text\">wait</code>の後で<code class=\"language-text\">describe-tasks</code>によって失敗したかどうかをチェックする必要があるとおもう。</p>\n<p><code class=\"language-text\">wait</code>コマンドはタスクの完了だけでなくサービスのステータスの監視でも使えるし、またECS以外にもEC2などで使えるのでawscliを使ったスクリプトを書くときには今後もお世話になりそう。</p>","fileAbsolutePath":"/home/circleci/project/contents/posts/28.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"c6e2d4a5-b6cf-5367-b2ab-47fdfe4a5fcd"}}}