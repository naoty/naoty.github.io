{"componentChunkName":"component---src-templates-post-jsx","path":"/posts/31.html","webpackCompilationHash":"299d6502817b1fc80c1d","result":{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"docker-composeでwebpack-dev-serverを使う","time":"2018-06-06T23:04:00+0900","description":"docker-composeでwebpack-dev-serverを起動しRails + webpackerからアクセスできるようにした話","tags":["docker"]},"html":"<p>docker-composeを使って開発をしているとき、webpack-dev-serverを別サービスとして起動させたくなる。Rails + webpackerの環境でうまく実現できたのでメモを残しておく。</p>\n<p><code class=\"language-text\">docker-compose.yml</code>のうちポイントとなる箇所だけ抽出した。</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">rails</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">WEBPACKER_DEV_SERVER_HOST</span><span class=\"token punctuation\">:</span> webpack<span class=\"token punctuation\">-</span>dev<span class=\"token punctuation\">-</span>server\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./public/packs<span class=\"token punctuation\">:</span>/myapp/public/packs\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> webpack<span class=\"token punctuation\">-</span>dev<span class=\"token punctuation\">-</span>server\n  <span class=\"token key atrule\">webpack-dev-server</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">WEBPACKER_DEV_SERVER_HOST</span><span class=\"token punctuation\">:</span> 0.0.0.0\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 3035<span class=\"token punctuation\">:</span><span class=\"token number\">3035</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./public/packs<span class=\"token punctuation\">:</span>/myapp/public/packs</code></pre></div>\n<h1>webpackerとwebpack-dev-server</h1>\n<p>webpackerをセットアップするとwebpack-dev-serverもついてくる。そして、<code class=\"language-text\">config/webpacker.yml</code>にはwebpack-dev-serverの設定も含まれている。</p>\n<p>開発環境において、webpackerはアセットへのリクエスト受信時にwebpackを実行してアセットをコンパイルするが、webpack-dev-serverの起動が確認できればアセットへのリクエストをwebpack-dev-serverに転送するようになっている。</p>\n<p>Railsがwebpack-dev-serverに接続する際、<code class=\"language-text\">config/webpacker.yml</code>に記載されたhostとportを参照する。ただし、<code class=\"language-text\">WEBPACKER_DEV_SERVER_*</code>のようなパターンの環境変数を設定することでYAMLファイルの設定を上書きできるようになっており、それを利用しているのが、上の<code class=\"language-text\">docker-compose.yml</code>内で指定している環境変数<code class=\"language-text\">WEBPACKER_DEV_SERVER_HOST</code>となる。これでwebpack-dev-serverのhostを設定できる。</p>\n<p>このdocker-composeでは、<code class=\"language-text\">depends_on</code>で設定したサービスのaliasを設定することでRailsからwebpack-dev-serverにアクセスできるようにしている。また、<code class=\"language-text\">webpack-dev-server</code>サービスで<code class=\"language-text\">0.0.0.0</code>を指定しているのは、このコンテナ外からアクセスできるようにするためだ。</p>\n<h1>マニフェストファイルの共有</h1>\n<p>Railsがwebpackでコンパイルしたアセットにアクセスする際、マニフェストファイルに記載されたアセットのファイルパスを利用している。マニフェストファイルはコンパイル時に生成されるため、webpack-dev-serverを実行するコンテナでマニフェストファイルが生成されることになる。</p>\n<p>そこで、マニフェストファイルが生成される<code class=\"language-text\">public/packs</code>ディレクトリをホストとマウントすることでRailsコンテナからマニフェストファイルを参照できるようにしている。</p>\n<h1>live reload</h1>\n<p>webpack-dev-serverはアセットのソースコードが変更されたときにブラウザを自動更新させるlive reloadの機能も備えている。live reloadはwebpack-dev-serverがアセットをコンパイルする際にlive reloadするスクリプトを挿入することで実現している（はず）。そのスクリプトはwebpack-dev-serverを参照するため（ここら辺の詳しい仕組みはちゃんと把握できていない）、3025番でホストとのポートマッピングを行っている。</p>","fileAbsolutePath":"/home/circleci/project/contents/posts/31.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"3c4f82b4-3d2e-554b-8252-dda42e4d4723"}}}