{"componentChunkName":"component---src-templates-post-jsx","path":"/posts/57.html","webpackCompilationHash":"a55fee11bd5bfee29972","result":{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"前後左右に移動する","time":"2019-02-17T18:06:00+0900","description":null,"tags":["unity"]},"html":"<p>相変わらずUnityでVRゲームを作っている。自分を前後左右に移動させるスクリプトの書き方を学んだ。</p>\n<p><img src=\"/images/posts/57/walk.gif\" alt=\"walk\"></p>\n<p>まず、一人称のプレイヤーを制御するには<code class=\"language-text\">CharacterController</code>というコンポーネントを使う。これは<code class=\"language-text\">RigidBody</code>のような物理特性を持たない、つまり重力のような力の影響を受けないけど、衝突判定を持ち、段差や斜面を移動できるような特性を持つ。</p>\n<p><code class=\"language-text\">CharacterController</code>コンポーネントを持つGame Objectに以下のようなスクリプトを追加する。</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Walk</span> <span class=\"token punctuation\">:</span> <span class=\"token class-name\">MonoBehaviour</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">float</span> velocity <span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">CharacterController</span> controller<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">void</span> Start <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        controller <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CharacterController</span><span class=\"token punctuation\">></span> </span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">void</span> Update <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        controller<span class=\"token punctuation\">.</span>SimpleMove <span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>forward <span class=\"token operator\">*</span> velocity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">Camera.main.transform.forward</code>でカメラが向いている方向を単位ベクトルとして取得できる。単位ベクトルとは、距離が1となるベクトルのこと。</li>\n<li>単位ベクトルに速度<code class=\"language-text\">velocity</code>を掛けることで、移動先へのベクトル（向きと大きさ）が計算できる。</li>\n<li><code class=\"language-text\">CharacterController</code>の<code class=\"language-text\">SimpleMove</code>関数に移動先へのベクトルを渡すと、y軸（上下）方向を無視して移動させることができる。</li>\n</ul>\n<p>Unityやっててだんだんわかってきたけど、ベクトル（<code class=\"language-text\">Vector3</code>）を使った計算が頻繁に必要になってくる。Unity側でやってくれる部分もあるけど、自分で実装しないといけない場面もけっこうあるんだな〜と思った。なので、ベクトルを使った計算や物理法則もゆっくり勉強していきたい。</p>","fileAbsolutePath":"/home/circleci/project/contents/posts/57.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"3063bc93-7454-5200-ad80-79c7c97b893a"}}}