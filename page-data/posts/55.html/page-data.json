{"componentChunkName":"component---src-templates-post-jsx","path":"/posts/55.html","webpackCompilationHash":"c4855d3bebba2bfe9f25","result":{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"Result型のメソッドをまとめる","time":"2019-01-25T22:32:00+0900","description":null,"tags":["rust"]},"html":"<p>Rustに慣れてくるにつれて、<code class=\"language-text\">Result</code>型を使いこなすことで効率的にコードが書くことができそうということがわかってきた。ただ、いろんなメソッドがあり、それぞれ<code class=\"language-text\">Ok</code>の場合と<code class=\"language-text\">Err</code>の場合で挙動が異なるため、表にまとめることにした。</p>\n<h1>条件分岐</h1>\n<table>\n<thead>\n<tr>\n<th>メソッド</th>\n<th><code class=\"language-text\">Ok</code>の場合</th>\n<th><code class=\"language-text\">Err</code>の場合</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">and</code></td>\n<td>引数のResultを返す</td>\n<td>selfを返す</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">and_then</code></td>\n<td>引数のクロージャを実行して結果のResultを返す</td>\n<td>selfを返す</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">or</code></td>\n<td>selfを返す</td>\n<td>引数のResultを返す</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">or_else</code></td>\n<td>selfを返す</td>\n<td>引数のクロージャを実行して結果のResultを返す</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><code class=\"language-text\">and_then</code>と似たメソッドとして<code class=\"language-text\">map</code>がある。<code class=\"language-text\">map</code>は<code class=\"language-text\">and_then</code>とは違って、引数に渡すクロージャが値を返す。</li>\n<li><code class=\"language-text\">and_then</code>の引数に渡すクロージャが返す<code class=\"language-text\">Result</code>はエラーの型<code class=\"language-text\">E</code>が元のエラーの型と一致する必要がある。まったく違う<code class=\"language-text\">Result</code>型を返すことはできないということに注意する。</li>\n</ul>\n<h1>unwrap</h1>\n<table>\n<thead>\n<tr>\n<th>メソッド</th>\n<th><code class=\"language-text\">Ok</code>の場合</th>\n<th><code class=\"language-text\">Err</code>の場合</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">unwrap</code></td>\n<td>値を返す</td>\n<td><code class=\"language-text\">Err</code>に含まれるメッセージと共にpanicを起こす</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">expect</code></td>\n<td>値を返す</td>\n<td>引数のメッセージと共にpanicを起こす</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">unwrap_err</code></td>\n<td><code class=\"language-text\">Ok</code>の値を含むメッセージと共にpanicを起こす</td>\n<td>値を返す</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">expect_err</code></td>\n<td>引数のメッセージと共にpanicを起こす</td>\n<td>値を返す</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">unwrap_or</code></td>\n<td>値を返す</td>\n<td>引数の値を返す</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">unwrap_or_else</code></td>\n<td>値を返す</td>\n<td>引数のクロージャを実行して結果の値を返す</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">unwrap_or_default</code></td>\n<td>値を返す</td>\n<td>値の型のデフォルト値を返す</td>\n</tr>\n</tbody>\n</table>","fileAbsolutePath":"/home/circleci/project/contents/posts/55.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"79bd661e-d8f6-5561-a930-775003ecf15a"}}}