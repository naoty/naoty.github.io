{"componentChunkName":"component---src-templates-post-jsx","path":"/posts/65.html","webpackCompilationHash":"b07fc910211381608a11","result":{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"MySQLコンテナの起動時にDBを初期化する","time":"2019-04-28T16:18:00+0900","description":null,"tags":["db","docker"]},"html":"<h1>状況</h1>\n<p>Webアプリケーションの開発環境でコンテナを使っている場合、MySQLなどのデータベースもコンテナで起動し、Docker Composeで管理することが多いと思う。</p>\n<h1>問題</h1>\n<p>テーブルの作成やシードデータの追加といったセットアップ手順は、例えばRailsであれば<code class=\"language-text\">db:migrate</code>や<code class=\"language-text\">db:seed</code>のような便利コマンドによって行われるが、そうした追加のセットアップ手順は可能な限り省略したい。</p>\n<h1>解決</h1>\n<p><a href=\"https://hub.docker.com/_/mysql\">公式のMySQLコンテナ</a>はコンテナの初回起動時に任意のSQLを実行する仕組みがあるため、これを使ってコンテナの起動時に必要なセットアップをすべて終わらせることができる。</p>\n<p>以下のようなディレクトリを例にとる。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">database\n├── Dockerfile\n├── docker-entrypoint-initdb.d\n│   ├── 1_schema.sql\n│   └── 2_seed.sql\n├── mysqld.cnf\n└── seed\n    ├── statuses.csv\n    └── tasks.csv</code></pre></div>\n<p><code class=\"language-text\">Dockerfile</code>はこうなっている。</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">FROM</span> mysql<span class=\"token punctuation\">:</span>8\n<span class=\"token keyword\">ADD</span> mysqld.cnf /etc/mysql/conf.d/\n<span class=\"token keyword\">ADD</span> docker<span class=\"token punctuation\">-</span>entrypoint<span class=\"token punctuation\">-</span>initdb.d /docker<span class=\"token punctuation\">-</span>entrypoint<span class=\"token punctuation\">-</span>initdb.d/\n<span class=\"token keyword\">ADD</span> seed /seed/</code></pre></div>\n<ul>\n<li><code class=\"language-text\">/etc/mysql/conf.d/</code>以下に設定ファイルを配置するとincludeされるようになっている。</li>\n<li><code class=\"language-text\">/docker-entrypoint-initdb.d/</code>ディレクトリ以下に配置した<code class=\"language-text\">*.sql</code>や<code class=\"language-text\">*.sh</code>といったファイルは初回起動時に実行される。</li>\n<li>この例では、<code class=\"language-text\">1_schema.sql</code>でテーブルが作成され、<code class=\"language-text\">2_seed.sql</code>でシードデータが作成されるようになっている。番号をprefixにつけることで実行順を制御している。</li>\n</ul>\n<p>シードデータの作成は以下のように行っている。</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">LOAD</span> <span class=\"token keyword\">DATA</span> <span class=\"token keyword\">INFILE</span> <span class=\"token string\">'/seed/statuses.csv'</span> <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">TABLE</span> statuses <span class=\"token keyword\">FIELDS</span> <span class=\"token keyword\">TERMINATED</span> <span class=\"token keyword\">BY</span> <span class=\"token string\">','</span> <span class=\"token keyword\">ENCLOSED</span> <span class=\"token keyword\">BY</span> <span class=\"token string\">'\"'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">LOAD</span> <span class=\"token keyword\">DATA</span> <span class=\"token keyword\">INFILE</span> <span class=\"token string\">'/seed/tasks.csv'</span> <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">TABLE</span> tasks <span class=\"token keyword\">FIELDS</span> <span class=\"token keyword\">TERMINATED</span> <span class=\"token keyword\">BY</span> <span class=\"token string\">','</span> <span class=\"token keyword\">ENCLOSED</span> <span class=\"token keyword\">BY</span> <span class=\"token string\">'\"'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>ちなみにシードデータはこんな感じ。ヘッダーはつけられなさそうだった。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1,TODO,1\n2,DOING,2\n3,DONE,3</code></pre></div>\n<p><code class=\"language-text\">LOAD DATA INFILE</code>を使ってコンテナ内のCSVファイルからデータを作成しているんだけど、これを行うには設定を追加する必要がある。そのため、以下のような<code class=\"language-text\">mysqld.cnf</code>を<code class=\"language-text\">/etc/mysql/conf.d/</code>以下に配置している。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[mysqld]\nsecure-file-priv = &quot;&quot;</code></pre></div>\n<p>以上のようなカスタムイメージを作ることで初回起動時に必要なセットアップがすべて完了した状態で起動できるようになる。</p>","fileAbsolutePath":"/home/circleci/project/contents/posts/65.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"7bf12d9f-e6b6-5746-b92d-86825c01ea6e"}}}