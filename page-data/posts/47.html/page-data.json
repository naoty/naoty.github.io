{"componentChunkName":"component---src-templates-post-jsx","path":"/posts/47.html","webpackCompilationHash":"26048d1f86f7d93284ba","result":{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"db:migrateした分だけdb:rollbackするrubygemを書いた","time":"2018-11-11T15:27:00+0900","description":null,"tags":["rails"]},"html":"<p><a href=\"https://github.com/naoty/batch_rollback\">naoty/batch_rollback</a>というrubygemを書いた。</p>\n<p><img src=\"/images/posts/47/screencast.gif\" alt=\"screencast\"></p>\n<p>これは<code class=\"language-text\">db:migrate</code>でmigrateしたversionやステップ数を記録しておいて、<code class=\"language-text\">db:rollback</code>でまとめてrollbackできるようにする。</p>\n<h1>モチベーション</h1>\n<p>このrubygemを書いた動機としては、ロールバックを安全に自動化したかった。Railsアプリケーションをロールバックするには<code class=\"language-text\">rails db:rollback</code>を行うことになるが、そのとき問題になるのは<code class=\"language-text\">STEP</code>をいくつにするかということがある。リリース時に<code class=\"language-text\">db:migrate</code>したmigrationファイルがいくつあったかはリリースごとに異なるため、ロールバックを自動化する上で問題になる。</p>\n<p>そこで、<code class=\"language-text\">db:migrate</code>時にmigrateされたバージョン数を記録しておき、<code class=\"language-text\">db:rollback</code>の<code class=\"language-text\">STEP</code>に指定するrubygemを書いた。</p>\n<h1>仕組み</h1>\n<p><code class=\"language-text\">db:migrate</code>の前後にRakeタスクを追加し、migrationされたバージョンやステップを記録している。あるRakeタスクの前後に実行させたいRakeタスクを追加するには<code class=\"language-text\">Rake::Task#enhance</code>を使う。<code class=\"language-text\">Railtie</code>で<code class=\"language-text\">#enhance</code>したい場合は<code class=\"language-text\">Railtie.rake_tasks</code>ブロック内で行う。</p>\n<div class=\"gatsby-highlight\" data-language=\"rb\"><pre class=\"language-rb\"><code class=\"language-rb\"><span class=\"token keyword\">module</span> <span class=\"token constant\">BatchRollback</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">Railtie</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">Rails</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Railtie</span>\n    rake_tasks <span class=\"token keyword\">do</span>\n      namespace <span class=\"token symbol\">:batch_rollback</span> <span class=\"token keyword\">do</span>\n        task <span class=\"token symbol\">:pre_migration</span> <span class=\"token keyword\">do</span>\n        <span class=\"token keyword\">end</span>\n\n        task <span class=\"token symbol\">:post_migration</span> <span class=\"token keyword\">do</span>\n        <span class=\"token keyword\">end</span>\n      <span class=\"token keyword\">end</span>\n\n      <span class=\"token constant\">Rake</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Task</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"db:migrate\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>enhance<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"batch_rollback:pre_migration\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n        <span class=\"token constant\">Rake</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Task</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"batch_rollback:post_migration\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>invoke\n      <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>migrationされたバージョンやステップの記録はrubygem内に定義したちょっとしたmodelから行っている。</p>\n<div class=\"gatsby-highlight\" data-language=\"rb\"><pre class=\"language-rb\"><code class=\"language-rb\"><span class=\"token keyword\">module</span> <span class=\"token constant\">BatchRollback</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">MigrationStep</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>こうしたmodelのためのテーブルを作成するには、migrationを使うわけにはいかないので、<code class=\"language-text\">ActiveRecord::ConnectionAdapters::SchemaStatements#create_table</code>を利用する。このメソッドを使うとmigrationで使うDSLを使って簡単にテーブルを作成できる。</p>\n<div class=\"gatsby-highlight\" data-language=\"rb\"><pre class=\"language-rb\"><code class=\"language-rb\"><span class=\"token keyword\">module</span> <span class=\"token constant\">BatchRollback</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">MigrationStep</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n    <span class=\"token keyword\">class</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span> <span class=\"token keyword\">self</span>\n      <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">create_table</span></span>\n        connection<span class=\"token punctuation\">.</span>create_table<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>t<span class=\"token operator\">|</span>\n          t<span class=\"token punctuation\">.</span>string <span class=\"token symbol\">:current_version</span>\n          t<span class=\"token punctuation\">.</span>string <span class=\"token symbol\">:target_version</span>\n          t<span class=\"token punctuation\">.</span>integer <span class=\"token symbol\">:step</span>\n        <span class=\"token keyword\">end</span>\n      <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>こういったテクニックを組み合わせることで今回のrubygemを実装することができた。</p>","fileAbsolutePath":"/home/circleci/project/contents/posts/47.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"7834f3d9-bd6b-504f-922f-34a9c5554d2d"}}}