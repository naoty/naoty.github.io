{"componentChunkName":"component---src-templates-post-jsx","path":"/posts/38.html","webpackCompilationHash":"584539bd991eb8ba3f1e","result":{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"multi-stage buildでのfreshの運用","time":"2018-08-05T18:55:00+0900","description":null,"tags":["go","docker"]},"html":"<p>Goで書いているWebアプリケーションをDockerイメージにするとき、multi-stage buildを使ってビルド用のイメージと実行用のイメージを分けると思う。実行用のイメージをalpine linuxベースにするとイメージのサイズが異常に小さくなる。</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">FROM</span> golang as builder\n<span class=\"token keyword\">ENV</span> CGO_ENABLED 0\n<span class=\"token keyword\">WORKDIR</span> /go/src/github.com/naoty/hello\n\n<span class=\"token keyword\">RUN</span> curl https<span class=\"token punctuation\">:</span>//raw.githubusercontent.com/golang/dep/master/install.sh <span class=\"token punctuation\">|</span> sh \\\n  &amp;&amp; go get github.com/pilu/fresh\n\n<span class=\"token comment\"># dep</span>\n<span class=\"token keyword\">COPY</span> Gopkg.toml Gopkg.lock /go/src/github.com/naoty/hello/\n<span class=\"token keyword\">RUN</span> dep ensure <span class=\"token punctuation\">-</span>v <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>vendor<span class=\"token punctuation\">-</span>only=true\n\n<span class=\"token keyword\">COPY</span> . /go/src/github.com/naoty/hello/\n<span class=\"token keyword\">RUN</span> make install\n\n<span class=\"token keyword\">FROM</span> alpine\n<span class=\"token keyword\">RUN</span> apk <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>no<span class=\"token punctuation\">-</span>cache add ca<span class=\"token punctuation\">-</span>certificates \n<span class=\"token keyword\">WORKDIR</span> /root/\n<span class=\"token keyword\">COPY</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>from=builder /go/bin/hello /root/\n<span class=\"token keyword\">CMD</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./hello\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>一方で、Goの開発では<a href=\"https://github.com/pilu/fresh\">pilu/fresh</a>を使ってファイルの更新時に自動的にビルドと実行をし直したい。だけど、multi-stage buildを使っていると、実行用のイメージにはGoのビルド環境がないため、少し工夫が必要になる。</p>\n<p>docker-composeを使うとき、<code class=\"language-text\">target</code>オプションを使うとビルド用のコンテナまででビルドを中断できる。ただし、3.4からの機能なので<code class=\"language-text\">version</code>を3.4以上にする必要がある。</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.4\"</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">context</span><span class=\"token punctuation\">:</span> .\n      <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> builder\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"fresh\"</span><span class=\"token punctuation\">]</span></code></pre></div>","fileAbsolutePath":"/home/circleci/project/contents/posts/38.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"1c26261b-768b-54ed-8802-fb05f7e602bb"}}}