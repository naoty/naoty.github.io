{"componentChunkName":"component---src-templates-post-jsx","path":"/posts/50.html","webpackCompilationHash":"b07fc910211381608a11","result":{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"ブログで使うライブラリのアップデートを自動化する","time":"2018-12-12T22:16:00+0900","description":"dependabotを使ってGitHub Pageのビルドに使うライブラリのアップデートを自動化した話","tags":["meta"]},"html":"<p>このブログはGatsby.jsでビルドしてGitHub Pagesにホスティングしているんだけど、ビルドするために必要なライブラリを<a href=\"https://dependabot.com/\">dependabot</a>を使って自動的にアップデートするようにしたところ、とても快適になった。</p>\n<p>dependabotはOSSであれば無料で使うことができる。設定したスケジュールに従ってライブラリのアップデートが存在すれば以下のような感じでPull requestを自動的に送ってくれる。</p>\n<p><img src=\"/images/posts/50/pull_requests.png\" alt=\"pull requests\"></p>\n<p>さらにとてもよかったのが、マイナーアップデートであれば自動的にPull requestをmergeするといった、auto mergeの条件を細かく設定できたことだ。これによって大幅に運用の手間が抑えられる。</p>\n<p>このブログでは、<code class=\"language-text\">package.json</code>で指定したversion specifierに従ったアップデートは自動的にmergeするようにし、そうでないメジャーアップデートなどは手動でmergeするようにしている。ちょうどさきほど<a href=\"https://emotion.sh/\">emotion</a>のメジャーアップデートを手動でmergeしていたところだった。breaking changeを含んでいたため、auto mergeにしないで正解だった。</p>\n<p>ライブラリのアップデートは忘れがちで、気づいたときにアップデートしようとすると大幅な変更を余儀なくなってしまう。GitHub Pagesで自分のページを運用している開発者にはdependabotのようなサービスをオススメしたい。</p>","fileAbsolutePath":"/home/circleci/project/contents/posts/50.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"5960c4b8-9882-507a-b844-d6739b7c5d30"}}}