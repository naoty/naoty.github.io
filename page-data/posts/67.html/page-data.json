{"componentChunkName":"component---src-templates-post-jsx","path":"/posts/67.html","webpackCompilationHash":"7111d55247b5960878d9","result":{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"データ分析基盤の全体像を整理してみる","time":"2019-05-19T12:44:00+0900","description":"「ビッグデータを支える技術」を読んでデータ分析基盤の全体像を整理してみる話です。","tags":["bigdata","book"]},"html":"<p>仕事ではインフラエンジニアとしてAWS上のサービスを保守・運用しているのだけど、いずれデータ分析基盤のような大規模なシステムにも関わってみたいと思うようになり、最近は「<a href=\"https://gihyo.jp/book/2017/978-4-7741-9225-3\">ビッグデータを支える技術</a>」を読んでいる。</p>\n<p>データ分析基盤と聞くと、データなんとかみたいな概念だったり、Hadoop界隈のさまざまな技術が頭に浮かぶんだけど、いまいち何をなんのために使うのかわかってない。そこで、この本を参考にデータが生まれて分析に利用されるまでの全体像を整理してみたい。</p>\n<h1>全体像</h1>\n<ul>\n<li>ユーザーの入力から生まれるローデータをバルク型データ転送やストリーム型データ転送によって分散ストレージに保存する。</li>\n<li>分散ストレージに保存されたビッグデータを大規模分散処理フレームワークを使って分析に適した形式に変換し、列指向データベースに転送する。</li>\n<li>列指向データベースに保存されたビッグデータはダッシュボードツールやBIツールで分析され、可視化される。</li>\n<li>これらの一連のプロセスをワークフローエンジンで管理する。</li>\n</ul>\n<h1>ローデータ</h1>\n<p>ユーザーがフォームから入力したデータ、Webサーバーのアクセスログなど。</p>\n<h1>バルク型データ転送</h1>\n<p>定期的にまとまったデータを分散ストレージに保存すること。その際にCSVなどの標準的なフォーマットに変換したり、適切なサイズにデータをまとめたり分割することで効率的に保存できるようにする。</p>\n<p>このプロセスで使われる技術として、<a href=\"https://www.embulk.org\">Embulk</a>がある。</p>\n<h1>ストリーム型データ転送</h1>\n<p>リアルタイムに生成されるデータを分散ストレージに保存すること。高頻度に生成されるデータをそのまま分散ストレージに書き込もうとすると、書き込み性能の限界に到達してしまう。そこで、メッセージブローカという仕組みを使い、一時的にデータを溜めて、分散ストレージに書き込むデータの量を調整する。</p>\n<p>このプロセスで使われる技術として、<a href=\"https://kafka.apache.org/\">Apache Kafka</a>、<a href=\"https://aws.amazon.com/jp/kinesis/\">Amazon Kinesis</a>、<a href=\"https://www.fluentd.org/\">fluentd</a>がある。</p>\n<h1>分散ストレージ</h1>\n<p>複数のコンピュータやディスクからなるストレージのこと。ストレージを追加することでデータ容量を増やすことができ、スケーラビリティがある。分散ストレージとして使われるのは、オブジェクトストレージやNoSQLデータベースがある。</p>\n<p>分散ストレージに保存されるのは、アクセスログのような非構造化データ、CSVやJSONといった半構造化データとなる。</p>\n<p>オブジェクトストレージとしては<a href=\"https://aws.amazon.com/jp/s3/\">Amazon S3</a>やHDFSがあり、NoSQLデータベースとしては<a href=\"http://cassandra.apache.org/\">Apache Cassandra</a>や<a href=\"https://aws.amazon.com/jp/dynamodb/\">Amazon DynamoDB</a>がある。</p>\n<h1>大規模分散処理フレームワーク</h1>\n<p>分散ストレージに保存された非構造化データや半構造化データを構造化データに変換したり、集計したり、列指向データベースに保存したりするために大規模分散処理フレームワークを使う。</p>\n<p>この変換や集計やスキーマの定義にプログラムではなくSQLを使うためクエリエンジンを利用する。</p>\n<p>分散処理フレームワークとしては<a href=\"https://hadoop.apache.org/\">Apache Hadoop</a>や<a href=\"https://spark.apache.org/\">Apache Spark</a>があり、クエリエンジンとしては<a href=\"https://hive.apache.org/\">Apache Hive</a>、<a href=\"https://prestodb.github.io/\">presto</a>、<a href=\"https://impala.apache.org/\">Apache Impala</a>、<a href=\"https://spark.apache.org/sql/\">Spark SQL</a>があり、またマネージドな分散処理サービスでは<a href=\"https://aws.amazon.com/jp/emr/\">Amazon EMR</a>や<a href=\"https://cloud.google.com/dataproc/\">Cloud Dataproc</a>がある。</p>\n<h1>列指向データベース</h1>\n<p>カラム単位でデータを圧縮するデータベースのことで、カラム単位での集計に最適化されている。一般的なRDBは行指向データベースで高速な集計処理には大量のメモリが必要になってしまう。</p>\n<p>列指向データベースとして利用されるのは、<a href=\"https://cloud.google.com/bigquery/\">Google BigQuery</a>や<a href=\"https://aws.amazon.com/jp/redshift/\">Amazon Redshift</a>や<a href=\"https://www.treasuredata.co.jp/\">Treasure Data</a>がある。</p>\n<h1>BIツール</h1>\n<p>データを定期的にモニタリングしたり詳細なデータを探索するためにBIツールを使う。</p>\n<p>BIツールとして利用されるのは、<a href=\"https://www.tableau.com\">Tableau</a>がある。</p>\n<h1>ワークフローエンジン</h1>\n<p>一連のデータ処理のプロセスを定期的に実行したり、タスク間の依存関係を解決して決められた順番で実行したり、エラー時にはリトライさせるためにワークフローエンジンを使う。</p>\n<p>ワークフローエンジンとして利用されるのは、<a href=\"https://www.rundeck.com/open-source\">Rundeck</a>、<a href=\"https://airflow.apache.org/\">Apache Airflow</a>、<a href=\"https://luigi.readthedocs.io\">Luigi</a>、<a href=\"https://azkaban.github.io/\">Azkaban</a>、<a href=\"https://www.digdag.io/\">digdag</a>がある。</p>","fileAbsolutePath":"/home/circleci/project/contents/posts/67.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"8b985c96-5b03-5e4a-927c-7aff2ee8633b"}}}