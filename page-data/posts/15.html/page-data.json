{"componentChunkName":"component---src-templates-post-jsx","path":"/posts/15.html","webpackCompilationHash":"81c8b63fb5e831038801","result":{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"PostCSSを導入した","time":"2018-01-24T16:27:00+0900","description":"PostCSSを導入することでSASSからcssnextに移行した","tags":null},"html":"<p>このGitHub pagesのstylesheetは、これまでSASSで記述されGulpのパイプラインで処理されたCSSだった。今回、PostCSSを導入した。理由としては、PostCSSを通してマルチブラウザへの効率的な対応やCSSのlintを行いたかったからだ。</p>\n<p>PostCSSの導入にともなって、SASSで記述していたstylesheetをcssnextで書き換えた。SASSのような独自記法を覚えるよりも標準的な規格を覚える方が学習コストを回収しやすい。ちょうどCoffeeScriptからECMAScript 6への移行と同じような感じだ。</p>\n<p>導入したPostCSSプラグインは以下の通り。</p>\n<ul>\n<li><code class=\"language-text\">postcss-cssnext</code>：cssnextを導入する。これでcssで変数を利用したり、ネストした書き方ができる。<code class=\"language-text\">autoprefixer</code>が内部で使われており、サポートするブラウザに基づいてベンダープレフィックスを付与してくれる。</li>\n<li><code class=\"language-text\">postcss-import</code>：<code class=\"language-text\">@import</code>で宣言した外部のファイルを1つのファイルにまとめることができる。</li>\n<li><code class=\"language-text\">stylelint</code>：CSSのlintを行う。</li>\n<li><code class=\"language-text\">cssnano</code>：CSSの圧縮を行う。</li>\n</ul>","fileAbsolutePath":"/home/circleci/project/contents/posts/15.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"47906c5b-c295-5302-8a8b-80fa2b2ff269"}}}