{"componentChunkName":"component---src-templates-post-jsx","path":"/posts/32.html","webpackCompilationHash":"062646e33341915f481f","result":{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"Circle CIのSlackへの通知を分かりやすくする","time":"2018-06-08T16:23:00+0900","description":"Circle CIのSlackへの通知にjob名を入れるためにスクリプトを書いた話","tags":["circleci"]},"html":"<p>Circle CI 2.0で導入されたworkflowを使うと、Slackへの通知にどのjobが完了したのかが含まれていなくて困ることがあった。特に失敗したときにどのjobが失敗したのかSlackでは分からないのが不便だった。</p>\n<p>そこで、Slackへの通知を分かりやすくするための設定をいくつかしてみたところ、劇的によくなったので紹介したい。</p>\n<h1>通知スクリプトを自作する</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash -e</span>\n\n<span class=\"token assign-left variable\">payload</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">EOS\n{\n  \"attachments\": [\n    {\n      \"title\": \"Success\",\n      \"title_link\": \"<span class=\"token variable\">${CIRCLE_BUILD_URL}</span>\",\n      \"text\": \"\\<span class=\"token variable\"><span class=\"token variable\">`</span>workflow/$<span class=\"token punctuation\">{</span>CIRCLE_STAGE<span class=\"token punctuation\">}</span><span class=\"token punctuation\">\\</span><span class=\"token variable\">`</span></span> in <span class=\"token variable\">${CIRCLE_PROJECT_USERNAME}</span>/<span class=\"token variable\">${CIRCLE_PROJECT_REPONAME}</span> (<span class=\"token variable\">${CIRCLE_BRANCH}</span>)\",\n      \"mrkdwn_in\": [\"text\"],\n      \"color\": \"good\"\n    }\n  ]\n}\nEOS</span>\n<span class=\"token variable\">)</span></span>\n\n<span class=\"token function\">curl</span> <span class=\"token punctuation\">\\</span>\n  -X POST <span class=\"token punctuation\">\\</span>\n  -H <span class=\"token string\">'Content-Type: application/json'</span> <span class=\"token punctuation\">\\</span>\n  --data <span class=\"token string\">\"<span class=\"token variable\">${payload}</span>\"</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token variable\">${SLACK_WEBHOOK_URL}</span></code></pre></div>\n<ul>\n<li>Circle CIの連携時に生成されるWebhookを使って通知を送るスクリプトを書いた。</li>\n<li><code class=\"language-text\">attachments</code>フィールドを使ってリッチなメッセージを作る。</li>\n<li>環境変数<code class=\"language-text\">CIRCLE_STAGE</code>には、workflow内で実行中のjob名が入っているため、これを使ってどのjobが成功したのか失敗したのかを通知できる。</li>\n</ul>\n<h1>通知スクリプトを設定する</h1>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">test</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># ...</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> ./.circleci/notify<span class=\"token punctuation\">-</span>success\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> ./.circleci/notify<span class=\"token punctuation\">-</span>failure\n          <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> on_fail</code></pre></div>\n<ul>\n<li>各jobの最後のstepに成功時の通知を送るスクリプトを設定する。</li>\n<li><code class=\"language-text\">when: on_fail</code>を設定すると、先に実行されたstepが失敗したときに呼ばれるstepを設定できる。それを利用して、失敗時の通知を送るスクリプトを設定する。</li>\n</ul>","fileAbsolutePath":"/home/circleci/project/contents/posts/32.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"406d0e63-a9cd-5739-8da1-59d30da50559"}}}