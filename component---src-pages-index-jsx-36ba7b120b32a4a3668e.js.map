{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/utils/typography.js","webpack:///./src/components/Container.jsx","webpack:///./src/components/PageTitle.jsx","webpack:///./src/components/Head.jsx","webpack:///./src/components/List.jsx"],"names":["data","title","description","url","site","siteMetadata","rootURL","imageURL","to","href","query","romanFontFamily","japaneseFontFamily","typography","Typography","baseFontSize","baseLineHeight","headerFontFamily","bodyFontFamily","googleFonts","name","styles","overrideStyles","lineHeight","fontFeatureSettings","fontFamily","html","fontSize","body","backgroundColor","Container","rhythm","children","content","property","rel","type","List"],"mappings":"6MAQe,0BAAGA,EAAH,EAAGA,KAAH,OACb,YAAC,IAAD,KACE,YAAC,IAAD,CACEC,MAAM,eACNC,YAAY,0BACZC,IAAKH,EAAKI,KAAKC,aAAaC,QAC5BC,SAAaP,EAAKI,KAAKC,aAAaC,QAA5B,uBAGV,YAAC,IAAD,qBACA,YAAC,IAAD,KACE,sBAAI,YAAC,IAAD,CAAME,GAAG,WAAT,UACJ,sBAAI,iBAAGC,KAAK,4BAAR,WACJ,sBAAI,iBAAGA,KAAK,+BAAR,YACJ,sBAAI,iBAAGA,KAAK,kCAAR,eAKH,IAAMC,EAAK,c,iCC3BlB,aAEMC,EAAkB,CACtB,gBACA,qBACA,WACA,SACA,SACA,SACA,YACA,YACA,aACA,kBAEIC,EAAqB,CACzB,WACA,YACA,4BACA,UAGIC,EAAa,IArBnB,OAqBuBC,GAAW,CAChCC,aAAc,OACdC,eAAgB,EAChBC,iBAAiB,GAAD,OAAMN,EAAoBC,EAA1B,CAA8C,eAC9DM,eAAe,GAAD,OAAMP,EAAoBC,EAA1B,CAA8C,eAC5DO,YAAa,CACX,CACEC,KAAM,kBACNC,OAAQ,CAAC,aAGbC,eAAgB,iBAAO,CACrB,oBAAqB,CACnBC,WAAY,IACZC,oBAAqB,YAEvB,KAAQ,CACNC,WAAY,8BAEd,4BAA6B,CAC3BC,KAAM,CACJC,SAAU,QAEZC,KAAM,CACJC,gBAAiB,aAMVhB,O,sEC/CTiB,EAAS,mDACFjB,IAAWkB,OAAO,IADhB,sEAMDlB,IAAWkB,OAAO,GANjB,iBAOAlB,IAAWkB,OAAO,GAPlB,6HAgBA,oBAAGC,EAAH,EAAGA,SAAH,OACb,YAACF,EAAD,KACGE,K,uDCnBU,2DACInB,IAAWkB,OAAO,IADrC,mBAEoBlB,IAAWkB,OAAO,KAFtC,mC,sECAe,oBAAG9B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,IAAKI,EAA5B,EAA4BA,SAA5B,OACb,YAAC,IAAD,KACE,yBAAQN,GACS,OAAhBC,GAAwB,oBAAMkB,KAAK,cAAca,QAAS/B,IAC3D,oBAAMkB,KAAK,cAAca,QAAQ,UACjC,oBAAMC,SAAS,UAAUD,QAAQ,YACjC,oBAAMC,SAAS,WAAWD,QAAShC,IAClB,OAAhBC,GAAwB,oBAAMgC,SAAS,iBAAiBD,QAAS/B,IAClE,oBAAMgC,SAAS,SAASD,QAAS9B,IACjC,oBAAM+B,SAAS,WAAWD,QAAS1B,IACnC,oBAAM2B,SAAS,eAAeD,QAAQ,YACtC,oBAAMC,SAAS,eAAeD,QAAQ,aACtC,oBAAMC,SAAS,gBAAgBD,QAAShC,IACvB,OAAhBC,GAAwB,oBAAMgC,SAAS,sBAAsBD,QAAS/B,IACvE,oBAAMgC,SAAS,gBAAgBD,QAAS1B,IACxC,oBAAM4B,IAAI,OAAOC,KAAK,YAAY3B,KAAK,uBACvC,oBAAM0B,IAAI,mBAAmB1B,KAAK,gCAClC,oBAAM0B,IAAI,YAAY1B,KAAMN,IAC5B,oBAAMgC,IAAI,WAAW1B,KAAK,sB,sECjBxB4B,EAAI,gFAIWxB,IAAWkB,OAAO,KAJ7B,MAQK,oBAAGC,EAAH,EAAGA,SAAH,OACb,YAACK,EAAD,KACGL","file":"component---src-pages-index-jsx-36ba7b120b32a4a3668e.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Link from \"gatsby-link\";\nimport Container from \"../components/Container\";\nimport Head from \"../components/Head\";\nimport List from \"../components/List\";\nimport PageTitle from \"../components/PageTitle\";\n\nexport default ({ data }) => (\n  <Container>\n    <Head\n      title=\"Naoto Kaneko\"\n      description=\"Naoto Kaneko's homepage\"\n      url={data.site.siteMetadata.rootURL}\n      imageURL={`${data.site.siteMetadata.rootURL}/icons/256x256.png`}\n    />\n\n    <PageTitle>Naoto Kaneko</PageTitle>\n    <List>\n      <li><Link to=\"/posts/\">Posts</Link></li>\n      <li><a href=\"https://github.com/naoty\">GitHub</a></li>\n      <li><a href=\"https://twitter.com/naoty_k\">Twitter</a></li>\n      <li><a href=\"https://atcoder.jp/users/naoty\">AtCoder</a></li>\n    </List>\n  </Container>\n);\n\nexport const query = graphql`\n  query TopQuery {\n    site {\n      siteMetadata {\n        rootURL\n      }\n    }\n  }\n`;\n","import Typography from \"typography\";\n\nconst romanFontFamily = [\n  \"-apple-system\",\n  \"BlinkMacSystemFont\",\n  \"Segoe UI\",\n  \"Roboto\",\n  \"Oxygen\",\n  \"Ubuntu\",\n  \"Cantarell\",\n  \"Fira Sans\",\n  \"Droid Sans\",\n  \"Helvetica Neue\",\n];\nconst japaneseFontFamily = [\n  \"YuGothic\",\n  \"Yu Gothic\",\n  \"Hiragino Kaku Gothic ProN\",\n  \"Meiryo\"\n];\n\nconst typography = new Typography({\n  baseFontSize: \"16px\",\n  baseLineHeight: 2,\n  headerFontFamily: [...romanFontFamily, ...japaneseFontFamily, \"sans-serif\"],\n  bodyFontFamily: [...romanFontFamily, ...japaneseFontFamily, \"sans-serif\"],\n  googleFonts: [\n    {\n      name: \"Source Code Pro\",\n      styles: [\"Regular\"]\n    }\n  ],\n  overrideStyles: () => ({\n    \"h1,h2,h3,h4,h5,h6\": {\n      lineHeight: 1.5,\n      fontFeatureSettings: \"'palt' 1\"\n    },\n    \"code\": {\n      fontFamily: \"Source Code Pro, monospace\"\n    },\n    \"@media (min-width: 35rem)\": {\n      html: {\n        fontSize: \"18px\"\n      },\n      body: {\n        backgroundColor: \"#ddd\"\n      }\n    }\n  })\n});\n\nexport default typography;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport typography from \"../utils/typography\";\n\nconst Container = styled.main`\n  padding: ${typography.rhythm(1/2)};\n  background-color: #fff;\n\n  @media (min-width: 35rem) {\n    width: 35rem;\n    margin: ${typography.rhythm(1)} auto;\n    padding: ${typography.rhythm(1)};\n    box-shadow: 0 5px 5px rgba(0,0,0,.1), 3px 0 5px rgba(0,0,0,.1), -3px 0 5px rgba(0,0,0,.1);\n  }\n\n  & *:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport default ({ children }) => (\n  <Container>\n    {children}\n  </Container>\n);\n","import styled from \"@emotion/styled\"\nimport typography from \"../utils/typography\";\n\nexport default styled.h1`\n  margin-bottom: ${typography.rhythm(1/2)};\n  padding-bottom: ${typography.rhythm(1/4)};\n  border-bottom: 1px solid #333;\n`;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nexport default ({ title, description, url, imageURL }) => (\n  <Helmet>\n    <title>{title}</title>\n    {description !== null && <meta name=\"description\" content={description} />}\n    <meta name=\"theme-color\" content=\"white\" />\n    <meta property=\"og:type\" content=\"profile\" />\n    <meta property=\"og:title\" content={title} />\n    {description !== null && <meta property=\"og:description\" content={description} />}\n    <meta property=\"og:url\" content={url} />\n    <meta property=\"og:image\" content={imageURL} />\n    <meta property=\"twitter:card\" content=\"summary\" />\n    <meta property=\"twitter:site\" content=\"@naoty_k\" />\n    <meta property=\"twitter:title\" content={title} />\n    {description !== null && <meta property=\"twitter:description\" content={description} />}\n    <meta property=\"twitter:image\" content={imageURL} />\n    <link rel=\"icon\" type=\"image/png\" href=\"/icons/favicon.png\" />\n    <link rel=\"apple-touch-icon\" href=\"/icons/apple-touch-icon.png\" />\n    <link rel=\"canonical\" href={url} />\n    <link rel=\"manifest\" href=\"/manifest.json\" />\n  </Helmet>\n);\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport typography from \"../utils/typography\";\n\nconst List = styled.ul`\n  margin-left: 2rem;\n\n  & > li {\n    margin-bottom: ${typography.rhythm(1/4)};\n  }\n`;\n\nexport default ({ children }) => (\n  <List>\n    {children}\n  </List>\n)\n"],"sourceRoot":""}