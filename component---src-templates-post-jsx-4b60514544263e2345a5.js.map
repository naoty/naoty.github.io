{"version":3,"sources":["webpack:///./src/components/PostContent.jsx","webpack:///./src/components/PostMetadata.jsx","webpack:///./src/templates/post.jsx","webpack:///./src/utils/typography.js","webpack:///./src/components/Container.jsx","webpack:///./src/components/PageTitle.jsx","webpack:///./src/components/Head.jsx","webpack:///./src/components/Navigation.jsx","webpack:///./src/components/Tag.jsx"],"names":["Container","Object","styled_base_browser_esm","target","typography","rhythm","PostContent","_ref","html","core_browser_esm","PostContent_Container","dangerouslySetInnerHTML","__html","name","styles","PostMetadata","time","tags","datetime","DateTime","fromISO","PostMetadata_Container","dateTime","toISO","toFormat","map","tag","index","Tag","key","links","title","path","query","__webpack_exports__","data","postID","basename","markdownRemark","fileAbsolutePath","Head","frontmatter","description","url","site","siteMetadata","rootURL","imageURL","PageTitle","Navigation","typography__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","romanFontFamily","japaneseFontFamily","n","Typography","baseFontSize","baseLineHeight","headerFontFamily","concat","bodyFontFamily","googleFonts","overrideStyles","h1,h2,h3,h4,h5,h6","lineHeight","fontFeatureSettings","code","fontFamily","@media (min-width: 35rem)","fontSize","body","backgroundColor","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","children","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","content","property","rel","type","href","link","gatsby_link__WEBPACK_IMPORTED_MODULE_3___default","to","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","style","color","textDecoration","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_4___default"],"mappings":"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","file":"component---src-templates-post-jsx-4b60514544263e2345a5.js","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport typography from \"../utils/typography\";\n\nconst Container = styled.section`\n  margin-bottom: ${typography.rhythm(1)};\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-bottom: ${typography.rhythm(1 / 2)};\n  }\n\n  p,\n  ol,\n  ul,\n  pre,\n  table,\n  .gatsby-highlight {\n    margin-bottom: ${typography.rhythm(1)};\n  }\n\n  h1,\n  h1 > code {\n    font-size: 1.5rem;\n  }\n\n  h2,\n  h2 > code {\n    font-size: 1.3rem;\n  }\n\n  h3,\n  h3 > code {\n    font-size: 1.2rem;\n  }\n\n  h4,\n  h5,\n  h6 {\n    font-size: 1rem;\n  }\n\n  a {\n    color: #000;\n  }\n\n  code {\n    margin: 0 0.25rem;\n    font-size: 1rem;\n  }\n\n  img {\n    display: block;\n    width: 80%;\n    margin: 0 auto;\n    box-shadow: 3px 0 3px rgba(0, 0, 0, 0.3), -3px 0 3px rgba(0, 0, 0, 0.3), 0 3px 3px rgba(0, 0, 0, 0.3);\n  }\n\n  pre {\n    padding: ${typography.rhythm(1 / 2)};\n    background-color: #333;\n    color: #fff;\n    line-height: 1.8;\n    overflow-x: auto;\n  }\n\n  pre > code {\n    margin: 0;\n    font-size: 0.8rem;\n    line-height: 1.5;\n  }\n\n  table {\n    border: 1px solid #333;\n  }\n\n  th,\n  td {\n    padding: 0.25rem;\n    border: 1px solid #333;\n  }\n\n  th {\n    text-align: center;\n  }\n\n  /* custom prismjs theme */\n  .token.comment,\n  .token.block-comment,\n  .token.prolog,\n  .token.doctype,\n  .token.cdata {\n    color: #999;\n  }\n\n  .token.punctuation {\n    color: #ccc;\n  }\n\n  .token.tag,\n  .token.attr-name,\n  .token.namespace,\n  .token.deleted {\n    color: #e2777a;\n  }\n\n  .token.function-name {\n    color: #6196cc;\n  }\n\n  .token.boolean,\n  .token.number,\n  .token.function {\n    color: #f08d49;\n  }\n\n  .token.property,\n  .token.class-name,\n  .token.constant,\n  .token.symbol {\n    color: #f8c555;\n  }\n\n  .token.selector,\n  .token.important,\n  .token.atrule,\n  .token.keyword,\n  .token.builtin {\n    color: #cc99cd;\n  }\n\n  .token.string,\n  .token.char,\n  .token.attr-value,\n  .token.regex,\n  .token.variable {\n    color: #7ec699;\n  }\n\n  .token.operator,\n  .token.entity,\n  .token.url {\n    color: #67cdcc;\n  }\n\n  .token.important,\n  .token.bold {\n    font-weight: bold;\n  }\n\n  .token.italic {\n    font-style: italic;\n  }\n\n  .token.entity {\n    cursor: help;\n  }\n\n  .token.inserted {\n    color: green;\n  }\n`;\n\nexport default ({ html }) => (\n  <Container dangerouslySetInnerHTML={{ __html: html }} />\n);\n","import React from \"react\";\nimport { DateTime } from \"luxon\";\nimport styled from \"@emotion/styled\";\nimport Tag from \"../components/Tag\";\n\nconst Container = styled.p`\n  color: rgba(0, 0, 0, 0.54);\n  font-family: Source Code Pro, monospace;\n  font-size: 0.8rem;\n`;\n\nexport default ({ time, tags }) => {\n  const datetime = DateTime.fromISO(time);\n  return (\n    <Container>\n      <time dateTime={datetime.toISO()}>{datetime.toFormat(\"yyyy-MM-dd HH:mm:ss\")}</time>\n      {tags.map((tag, index) => <Tag key={index} name={tag} />)}\n    </Container>\n  )\n};\n","import React from \"react\";\nimport path from \"path\";\nimport { graphql } from \"gatsby\";\nimport Container from \"../components/Container\";\nimport Head from \"../components/Head\";\nimport Navigation from \"../components/Navigation\";\nimport PageTitle from \"../components/PageTitle\";\nimport PostContent from \"../components/PostContent\";\nimport PostMetadata from \"../components/PostMetadata\";\n\nconst links = [\n  { title: \"Top\", path: \"/\" },\n  { title: \"Posts\", path: \"/posts/\" }\n];\n\nexport default ({ data }) => {\n  const postID = path.basename(data.markdownRemark.fileAbsolutePath, \".md\");\n\n  return (\n    <Container>\n      <Head\n        title={data.markdownRemark.frontmatter.title}\n        description={data.markdownRemark.frontmatter.description}\n        url={`${data.site.siteMetadata.rootURL}/posts/${postID}.html`}\n        imageURL={`${data.site.siteMetadata.rootURL}/icons/256x256.png`}\n      />\n\n      <PageTitle>{data.markdownRemark.frontmatter.title}</PageTitle>\n      <PostMetadata\n        time={data.markdownRemark.frontmatter.time} \n        tags={data.markdownRemark.frontmatter.tags || []} />\n      <PostContent html={data.markdownRemark.html} />\n      <Navigation links={links} />\n    </Container>\n  )\n};\n\nexport const query = graphql`\n  query PostQuery($id: String!) {\n    site {\n      siteMetadata {\n        rootURL\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        time\n        description\n        tags\n      }\n      html\n      fileAbsolutePath\n    }\n  }\n`;\n","import Typography from \"typography\";\n\nconst romanFontFamily = [\n  \"-apple-system\",\n  \"BlinkMacSystemFont\",\n  \"Segoe UI\",\n  \"Roboto\",\n  \"Oxygen\",\n  \"Ubuntu\",\n  \"Cantarell\",\n  \"Fira Sans\",\n  \"Droid Sans\",\n  \"Helvetica Neue\",\n];\nconst japaneseFontFamily = [\n  \"YuGothic\",\n  \"Yu Gothic\",\n  \"Hiragino Kaku Gothic ProN\",\n  \"Meiryo\"\n];\n\nconst typography = new Typography({\n  baseFontSize: \"16px\",\n  baseLineHeight: 2,\n  headerFontFamily: [...romanFontFamily, ...japaneseFontFamily, \"sans-serif\"],\n  bodyFontFamily: [...romanFontFamily, ...japaneseFontFamily, \"sans-serif\"],\n  googleFonts: [\n    {\n      name: \"Source Code Pro\",\n      styles: [\"Regular\"]\n    }\n  ],\n  overrideStyles: () => ({\n    \"h1,h2,h3,h4,h5,h6\": {\n      lineHeight: 1.5,\n      fontFeatureSettings: \"'palt' 1\"\n    },\n    \"code\": {\n      fontFamily: \"Source Code Pro, monospace\"\n    },\n    \"@media (min-width: 35rem)\": {\n      html: {\n        fontSize: \"18px\"\n      },\n      body: {\n        backgroundColor: \"#ddd\"\n      }\n    }\n  })\n});\n\nexport default typography;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport typography from \"../utils/typography\";\n\nconst Container = styled.main`\n  padding: ${typography.rhythm(1/2)};\n  background-color: #fff;\n\n  @media (min-width: 35rem) {\n    width: 35rem;\n    margin: ${typography.rhythm(1)} auto;\n    padding: ${typography.rhythm(1)};\n    box-shadow: 0 5px 5px rgba(0,0,0,.1), 3px 0 5px rgba(0,0,0,.1), -3px 0 5px rgba(0,0,0,.1);\n  }\n\n  & *:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport default ({ children }) => (\n  <Container>\n    {children}\n  </Container>\n);\n","import styled from \"@emotion/styled\"\nimport typography from \"../utils/typography\";\n\nexport default styled.h1`\n  margin-bottom: ${typography.rhythm(1/2)};\n  padding-bottom: ${typography.rhythm(1/4)};\n  border-bottom: 1px solid #333;\n`;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nexport default ({ title, description, url, imageURL }) => (\n  <Helmet>\n    <title>{title}</title>\n    {description !== null && <meta name=\"description\" content={description} />}\n    <meta name=\"theme-color\" content=\"white\" />\n    <meta property=\"og:type\" content=\"profile\" />\n    <meta property=\"og:title\" content={title} />\n    {description !== null && <meta property=\"og:description\" content={description} />}\n    <meta property=\"og:url\" content={url} />\n    <meta property=\"og:image\" content={imageURL} />\n    <meta property=\"twitter:card\" content=\"summary\" />\n    <meta property=\"twitter:site\" content=\"@naoty_k\" />\n    <meta property=\"twitter:title\" content={title} />\n    {description !== null && <meta property=\"twitter:description\" content={description} />}\n    <meta property=\"twitter:image\" content={imageURL} />\n    <link rel=\"icon\" type=\"image/png\" href=\"/icons/favicon.png\" />\n    <link rel=\"apple-touch-icon\" href=\"/icons/apple-touch-icon.png\" />\n    <link rel=\"canonical\" href={url} />\n    <link rel=\"manifest\" href=\"/manifest.json\" />\n  </Helmet>\n);\n","import React from \"react\";\nimport Link from \"gatsby-link\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.ul`\n  margin-left: 0;\n  list-style: none;\n  text-align: center;\n\n  li {\n    display: inline;\n\n    &:not(:last-child) {\n      margin-right: 0.5rem;\n      padding-right: 0.5rem;\n      border-right: 1px solid #333;\n    }\n  }\n`;\n\nexport default ({ links }) => (\n  <Container>\n    {links.map((link, index) => (\n      <li key={index}><Link to={link.path}>{link.title}</Link></li>\n    ))}\n  </Container>\n);\n","import React from \"react\";\nimport Link from \"gatsby-link\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.span`\n  display: inline;\n  margin-left: 0.5rem;\n`;\n\nconst style = {\n  color: \"rgba(0, 0, 0, 0.54)\",\n  fontFamily: \"Source Code Pro, monospace\",\n  fontSize: \"0.8rem\",\n  textDecoration: \"none\"\n};\n\nexport default ({ key, name }) => {\n  return (\n    <Container key={key}>\n      <Link to={`/posts/${name}/`} style={style}>\n        #{name}\n      </Link >\n    </Container>\n  );\n}\n"],"sourceRoot":""}