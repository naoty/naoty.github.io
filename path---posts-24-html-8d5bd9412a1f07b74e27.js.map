{"version":3,"sources":["webpack:///path---posts-24-html-8d5bd9412a1f07b74e27.js","webpack:///./.cache/json/posts-24-html.json"],"names":["webpackJsonp","395","module","exports","data","site","siteMetadata","rootURL","markdownRemark","frontmatter","title","time","description","html","fileAbsolutePath","pathContext","id"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,QAAA,4BAAqCC,gBAAmBC,aAAeC,MAAA,yBAAAC,KAAA,2BAAAC,YAAA,MAAsFC,KAAA,q/BAAAC,iBAAA,yBAAgjCC,aAAgBC,GAAA","file":"path---posts-24-html-8d5bd9412a1f07b74e27.js","sourcesContent":["webpackJsonp([160601143649000],{\n\n/***/ 395:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"rootURL\":\"https://naoty.github.io\"}},\"markdownRemark\":{\"frontmatter\":{\"title\":\"bin/webpackに必要最小限のファイル\",\"time\":\"2018-03-13T21:22:00+0900\",\"description\":null},\"html\":\"<p><a href=\\\"https://naoty.github.io/posts/23.html\\\">前回</a>と同様にwebpackerによるbundleに必要最小限なファイルの<code>COPY</code>を試してみた。</p>\\n<pre><code class=\\\"language-dockerfile\\\">FROM starefossen/ruby-node:2-8-alpine\\nWORKDIR /myapp\\n\\nCOPY app/javascript /myapp/app/javascript/\\nCOPY bin/webpack /myapp/bin/\\nCOPY config/webpack /myapp/config/webpack/\\nCOPY config/webpacker.yml /myapp/config/webpacker.yml\\nCOPY .babelrc .postcssrc.yml /myapp/\\nCOPY Gemfile Gemfile.lock /myapp/\\nCOPY --from=bundler /usr/local/bundle /usr/local/bundle\\nRUN bin/webpack\\n</code></pre>\\n<ul>\\n<li>webpackerを使うにはRubyとNodeの両方が必要になるため両方が入ったベースイメージを探したところ、<a href=\\\"https://hub.docker.com/r/starefossen/ruby-node/\\\">starefossen/ruby-node</a>がよさそうだった。</li>\\n<li><code>COPY --from=bundler</code>としているところは、<a href=\\\"https://docs.docker.com/develop/develop-images/multistage-build/\\\">multi-stage build</a>を使っている。前段のビルドで<code>bundle install</code>しておいたものを<code>COPY</code>している。こうすることで実行時には不要なものを除くことができる。このビルド自体もRailsを起動するために必要なファイルを生成するビルドにすぎない。</li>\\n</ul>\",\"fileAbsolutePath\":\"contents/posts/24.md\"}},\"pathContext\":{\"id\":\"contents/posts/24.md absPath of file >>> MarkdownRemark\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---posts-24-html-8d5bd9412a1f07b74e27.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"rootURL\":\"https://naoty.github.io\"}},\"markdownRemark\":{\"frontmatter\":{\"title\":\"bin/webpackに必要最小限のファイル\",\"time\":\"2018-03-13T21:22:00+0900\",\"description\":null},\"html\":\"<p><a href=\\\"https://naoty.github.io/posts/23.html\\\">前回</a>と同様にwebpackerによるbundleに必要最小限なファイルの<code>COPY</code>を試してみた。</p>\\n<pre><code class=\\\"language-dockerfile\\\">FROM starefossen/ruby-node:2-8-alpine\\nWORKDIR /myapp\\n\\nCOPY app/javascript /myapp/app/javascript/\\nCOPY bin/webpack /myapp/bin/\\nCOPY config/webpack /myapp/config/webpack/\\nCOPY config/webpacker.yml /myapp/config/webpacker.yml\\nCOPY .babelrc .postcssrc.yml /myapp/\\nCOPY Gemfile Gemfile.lock /myapp/\\nCOPY --from=bundler /usr/local/bundle /usr/local/bundle\\nRUN bin/webpack\\n</code></pre>\\n<ul>\\n<li>webpackerを使うにはRubyとNodeの両方が必要になるため両方が入ったベースイメージを探したところ、<a href=\\\"https://hub.docker.com/r/starefossen/ruby-node/\\\">starefossen/ruby-node</a>がよさそうだった。</li>\\n<li><code>COPY --from=bundler</code>としているところは、<a href=\\\"https://docs.docker.com/develop/develop-images/multistage-build/\\\">multi-stage build</a>を使っている。前段のビルドで<code>bundle install</code>しておいたものを<code>COPY</code>している。こうすることで実行時には不要なものを除くことができる。このビルド自体もRailsを起動するために必要なファイルを生成するビルドにすぎない。</li>\\n</ul>\",\"fileAbsolutePath\":\"contents/posts/24.md\"}},\"pathContext\":{\"id\":\"contents/posts/24.md absPath of file >>> MarkdownRemark\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/posts-24-html.json\n// module id = 395\n// module chunks = 160601143649000"],"sourceRoot":""}