{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"Result型の返り値を使わないとき","time":"2019-01-05T17:09:00+0900","description":null,"tags":["rust"]},"html":"<p>以下のように<code>Result</code>型を返すメソッドの返り値を使わないと、コンパイラが<code>unused `std::result::Result` that must be used</code>のような警告を出す。</p>\n<pre><code class=\"language-rust\">process::Command::new(\"ls\").output()\n</code></pre>\n<p><code>Result</code>型を返すメソッドが失敗したとき、返り値を使わないとそれに気づくことができないため、必ず返り値を使うようにコンパイラが警告してくれる。</p>\n<p>返り値を使わないときは<code>expect</code>を使う。このメソッドは<code>Result</code>が<code>Ok</code>であれば値を返し、<code>Err</code>であれば引数のメッセージを表示してpanicを起こす。</p>\n<pre><code class=\"language-rust\">process::Command::new(\"ls\").output().expect(\"failed\");\n</code></pre>\n<p>あるいは、<code>?</code>オペレータを使ってエラーをそのまま呼び出し元に転送することもできる。</p>\n<pre><code class=\"language-rust\">fn execute_ls() -> io::Result&#x3C;()> {\n    process::Command::new(\"ls\").output().expect(\"failed\")?;\n    Ok(())\n}\n</code></pre>","fileAbsolutePath":"/home/circleci/project/contents/posts/54.md"}},"pageContext":{"id":"5c40d12c-73a0-5b70-b694-2fdc58c4ed92"}}