{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"前後左右に移動する","time":"2019-02-17T18:06:00+0900","description":null,"tags":["unity"]},"html":"<p>相変わらずUnityでVRゲームを作っている。自分を前後左右に移動させるスクリプトの書き方を学んだ。</p>\n<p><img src=\"/images/posts/57/walk.gif\" alt=\"walk\"></p>\n<p>まず、一人称のプレイヤーを制御するには<code>CharacterController</code>というコンポーネントを使う。これは<code>RigidBody</code>のような物理特性を持たない、つまり重力のような力の影響を受けないけど、衝突判定を持ち、段差や斜面を移動できるような特性を持つ。</p>\n<p><code>CharacterController</code>コンポーネントを持つGame Objectに以下のようなスクリプトを追加する。</p>\n<pre><code class=\"language-csharp\">public class Walk : MonoBehaviour {\n    public float velocity = 1.0f;\n    private CharacterController controller;\n\n    void Start () {\n        controller = GetComponent&#x3C;CharacterController> ();\n    }\n\n    void Update () {\n        controller.SimpleMove (Camera.main.transform.forward * velocity);\n    }\n}\n</code></pre>\n<ul>\n<li><code>Camera.main.transform.forward</code>でカメラが向いている方向を単位ベクトルとして取得できる。単位ベクトルとは、距離が1となるベクトルのこと。</li>\n<li>単位ベクトルに速度<code>velocity</code>を掛けることで、移動先へのベクトル（向きと大きさ）が計算できる。</li>\n<li><code>CharacterController</code>の<code>SimpleMove</code>関数に移動先へのベクトルを渡すと、y軸（上下）方向を無視して移動させることができる。</li>\n</ul>\n<p>Unityやっててだんだんわかってきたけど、ベクトル（<code>Vector3</code>）を使った計算が頻繁に必要になってくる。Unity側でやってくれる部分もあるけど、自分で実装しないといけない場面もけっこうあるんだな〜と思った。なので、ベクトルを使った計算や物理法則もゆっくり勉強していきたい。</p>","fileAbsolutePath":"/Users/naoty/src/github.com/naoty/homepage/contents/posts/57.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"d7009057-7f28-5496-821b-a4d5f1d4b015"}}