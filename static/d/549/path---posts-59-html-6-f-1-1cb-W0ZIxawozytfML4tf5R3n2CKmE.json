{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"terraformとapex infraの依存関係","time":"2019-02-28T23:52:00+0900","description":null,"tags":["terraform"]},"html":"<h1>背景</h1>\n<p>AWSの構成管理にterraformを使っているんだけど、Lambda関数とそれに関連するAWSリソースの管理は<a href=\"https://apex.run\">apex</a>を使っている。apexの方がLambda関数のバージョニングができたり、コードの依存関係を簡単にzipにまとめてアップロードできたりして便利なのだ。</p>\n<p>apexには、<code class=\"language-text\">apex infra</code>というコマンドがあり、Lambda関数にAWS関連するリソース（パーミッションとかCloudWatch Logsとか）を管理できる。実際には内部的にterraformを使っている。</p>\n<h1>課題</h1>\n<p>terraformで管理するリソースと<code class=\"language-text\">apex infra</code>で管理するリソースに明確なボーダーラインを引くことは難しい。apexで管理するLambda関数はterraformで管理するさまざまなリソースと依存関係になっていることがほとんどだからだ。どこで何が管理されているのかわからなってくる。</p>\n<h1>方針</h1>\n<p>こういうときの考え方として、依存関係の方向性を単方向にすると良かったりする。<code class=\"language-text\">apex infra</code>で管理するリソースはterraformで管理するリソースを参照することができるけど、逆にterraformで管理するリソースは<code class=\"language-text\">apex infra</code>で管理するリソースを参照できない、というルールを作る。</p>\n<h1>実装</h1>\n<p><code class=\"language-text\">apex infra</code>からterraformのリソースを参照するために<code class=\"language-text\">terraform_remote_state</code>を使う。ここでは例として、apexで管理するLambda関数をterraformで管理するSNSトピックにsubscribeしたいとする。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">data &quot;terraform_remote_state&quot; &quot;global&quot; {\n  backend = &quot;s3&quot;\n\n  config {\n    region = &quot;ap-northeast-1&quot;\n    bucket = &quot;my-terraform&quot;\n    key    = &quot;global&quot;\n  }\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">resource &quot;aws_sns_topic_subscription&quot; &quot;lambda&quot; {\n  topic_arn = &quot;${data.terraform_remote_state.global.my_topic}&quot;\n  protocol  = &quot;lambda&quot;\n  endpoint  = &quot;${var.apex_function_arns[&quot;my_function&quot;]}&quot;\n}</code></pre></div>\n<p>SNSトピックのARNは事前に<code class=\"language-text\">output</code>でremote stateとして公開しておく必要がある。</p>\n<p>こうすることで、terraform側からapexで管理するLambda関数を参照せずに済んでいる。Lambda関数を参照するリソースは<code class=\"language-text\">apex infra</code>で管理し、そうでないリソースはterraformで管理するという方針でうまく整理できそうだ。</p>","fileAbsolutePath":"/home/circleci/project/contents/posts/59.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"de546ed8-420e-5791-a031-bd35e557f2b7"}}