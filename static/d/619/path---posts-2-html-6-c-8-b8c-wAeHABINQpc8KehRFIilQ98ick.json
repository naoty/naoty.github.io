{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"モデルの差分更新","time":"2017-12-01T21:40:00+0900","description":null,"tags":["rails"]},"html":"<p>アプリからデータのバックアップを受け取るときに、サーバー側で差分更新を行う必要がある。全部消去してから全部挿入するという実装も考えられるが、何かの実装ミスの際に全消去してしまうリスクがありそうなので避けたい。</p>\n<p>新しいデータと既存のデータを比較して、以下のような操作をする必要がある。</p>\n<ul>\n<li>新しいデータにも既存のデータにもあるデータを更新する。</li>\n<li>新しいデータにあるが、既存のデータにないデータを挿入する。</li>\n<li>新しいデータにないが、既存のデータにあるデータを削除する。</li>\n</ul>\n<p>これを実行するロジックをあらためて考えてみた。</p>\n<div class=\"gatsby-highlight\" data-language=\"rb\"><pre class=\"language-rb\"><code class=\"language-rb\">new_users <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"...\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"...\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\nnew_users_index <span class=\"token operator\">=</span> new_users<span class=\"token punctuation\">.</span>index_by <span class=\"token punctuation\">{</span> <span class=\"token operator\">|</span>new_user<span class=\"token operator\">|</span> new_user<span class=\"token punctuation\">[</span><span class=\"token symbol\">:id</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">.</span>in_batches <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>users<span class=\"token operator\">|</span>\n  users<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>user<span class=\"token operator\">|</span>\n    <span class=\"token comment\"># インデックスから取得できたデータは取り除いていく</span>\n    <span class=\"token comment\"># 残ったデータはINSERT時に利用する</span>\n    new_user <span class=\"token operator\">=</span> new_users_index<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 新しいデータに含まれているかチェック</span>\n    <span class=\"token keyword\">if</span> new_user<span class=\"token punctuation\">.</span><span class=\"token keyword\">nil</span><span class=\"token operator\">?</span>\n      <span class=\"token comment\"># 含まれていなければDELETE</span>\n      user<span class=\"token punctuation\">.</span>destroy\n    <span class=\"token keyword\">else</span>\n      <span class=\"token comment\"># 含まれていればUPDATE</span>\n      user<span class=\"token punctuation\">.</span>update_attributes<span class=\"token punctuation\">(</span>new_user<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token comment\"># 残ったデータはすべてINSERTする</span>\nnew_users_index<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>new_user<span class=\"token operator\">|</span>\n  <span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span>new_user<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span></code></pre></div>","fileAbsolutePath":"/home/circleci/project/contents/posts/2.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"3d009b58-0e2e-5a8b-9c0a-e7bbccffe3fe"}}