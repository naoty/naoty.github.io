{"data":{"site":{"siteMetadata":{"rootURL":"https://naoty.github.io"}},"markdownRemark":{"frontmatter":{"title":"HTMLテンプレートをpackrでバイナリに埋め込む","time":"2018-07-29T17:55:00+0900","description":null,"tags":["go"]},"html":"<p>最近、GoでWebアプリケーションを書く練習をしている。フレームワークとしてEchoを使っている。</p>\n<p>アセットをバイナリに埋め込むときいくつか選択肢があったけど、HTMLテンプレートのパースを実装しやすそうな<a href=\"https://github.com/gobuffalo/packr\">packr</a>を使ってみている。</p>\n<p>以下のようなテンプレートを用意する。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{/* assets/views/layout.html */}}\n{{define &quot;layout&quot; -}}\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;ja&quot;&gt;\n  &lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Task&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    {{template &quot;content&quot; . -}}\n  &lt;/body&gt;\n&lt;/html&gt;\n{{end}}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{{/* assets/views/index.html */}}\n{{define &quot;index&quot; -}}\n&lt;p&gt;Here is content!&lt;/p&gt;\n{{end}}</code></pre></div>\n<p>これらのテンプレートは以下のコマンドでバイナリに埋め込むことができる。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ packr build</code></pre></div>\n<p>次に、EchoでHTMLをレンダリングするためのRendererを実装する。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// renderer/renderer.go\n\n// Renderer is html/template renderer for Echo.\ntype Renderer struct {\n\ttemplates *template.Template\n}\n\n// New parses templates in box and return a new Renderer.\nfunc New(box packr.Box) *Renderer {\n\ttemplates := template.New(&quot;templates&quot;)\n\n\tfor _, name := range box.List() {\n\t\ttext := box.String(name)\n\t\ttemplates = template.Must(templates.Parse(text))\n\t}\n\n\treturn &amp;Renderer{templates: templates}\n}\n\n// Render renders HTML generated by template.\nfunc (r *Renderer) Render(wr io.Writer, name string, data interface{}, c echo.Context) error {\n\tlayout := template.Must(r.templates.Lookup(&quot;layout&quot;).Clone())\n\tcontent := template.Must(r.templates.Lookup(name).Clone())\n\thtml := template.Must(layout.AddParseTree(&quot;content&quot;, content.Tree))\n\n\treturn html.ExecuteTemplate(wr, &quot;layout&quot;, data)\n}</code></pre></div>\n<p><code class=\"language-text\">packr</code>コマンドでバイナリに埋め込んだアセットは<code class=\"language-text\">box.String(filename)</code>のように取得できる。これを使ってテンプレートをパースしていく。</p>\n<p>Rendererを初期化するときにテンプレートをすべてパースしておいて、レンダリング時にネストしたテンプレートを組み立てて<code class=\"language-text\">Execute</code>するようにしている。</p>\n<p>最後に、このRendererを初期化してEchoに設定する。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// main.go\n\ne := echo.New()\n\nviewsBox := packr.NewBox(&quot;./assets/views&quot;)\ne.Renderer = renderer.New(viewsBox)</code></pre></div>","fileAbsolutePath":"/home/circleci/project/contents/posts/37.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"659d12eb-944c-516a-bfec-7c79774a2b44"}}