webpackJsonp([0x954ed3cd0359],{393:function(e,n){e.exports={data:{site:{siteMetadata:{rootURL:"https://naoty.github.io"}},markdownRemark:{frontmatter:{title:"MailHogによるメールの受信確認",time:"2018-02-18T21:53:00+0900",description:"コンテナ中心の開発環境ではMailHogを使ってメールの受信確認を行うのが便利だった"},html:'<p>メール送信機能を開発する際、メールの受信を確認したい。従来のRailsアプリ開発では、<a href="https://github.com/ryanb/letter_opener">letter_opener</a>のようなライブラリを使っていた。</p>\n<p>現在のコンテナを中心とした開発環境では、Railsの外側にSMTPサーバーのコンテナを用意し、環境変数によって接続先を設定する方法が一般的ではないかと思った。調べてみると、<a href="https://github.com/mailhog/MailHog">MailHog</a>というツールが見つかった。MailHogはSMTPサーバーであり、かつ受信したメールを確認できるHTTPサーバーも兼ね備えている。</p>\n<p>MailHogはDocker Hubでコンテナを公開しているため、docker-composeを使うと簡単に開発環境に組み込むことができる。</p>\n<pre><code># docker-compose.yml\nservices:\n  web:\n    build: .\n    command: bin/rails s -p 3000 -b 0.0.0.0\n    environment:\n      SMTP_HOST: mail\n      SMTP_PORT: 1025\n    depends_on:\n      - mail\n  mail:\n    image: mailhog/mailhog\n    ports:\n      - 8025:8025\n</code></pre>\n<p>Railsではこんな感じで環境変数によってメールの送信先を設定するだけでいい。</p>\n<pre><code># application.rb\nconfig.action_mailer.delivery_method = :smtp\nconfig.action_mailer.smtp_settings = {\n  address: ENV["SMTP_HOST"],\n  port: ENV["SMTP_PORT"],\n}\n</code></pre>\n<p>本番環境などでは、この環境変数を実際に運用するSMTPサーバーのものに替えるだけでいい。</p>',fileAbsolutePath:"contents/posts/21.md"}},pathContext:{id:"contents/posts/21.md absPath of file >>> MarkdownRemark"}}}});
//# sourceMappingURL=path---posts-21-html-272be21c0e91c76be82f.js.map