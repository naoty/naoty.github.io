{"version":3,"sources":["webpack:///./src/components/PostContent.jsx","webpack:///./src/components/PostMetadata.jsx","webpack:///./src/templates/post.jsx","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Container.jsx","webpack:///./src/components/Head.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/PageTitle.jsx","webpack:///./src/components/Navigation.jsx","webpack:///./.cache/gatsby-browser-entry.js"],"names":["Container","Object","styled_base_browser_esm","target","typography","rhythm","PostContent","_ref","html","core_browser_esm","PostContent_Container","dangerouslySetInnerHTML","__html","name","styles","PostMetadata","time","datetime","DateTime","fromISO","PostMetadata_Container","dateTime","toISO","toFormat","links","title","path","query","__webpack_exports__","data","postID","basename","markdownRemark","fileAbsolutePath","Head","frontmatter","description","url","site","siteMetadata","rootURL","imageURL","PageTitle","Navigation","typography__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","romanFontFamily","japaneseFontFamily","n","Typography","baseFontSize","baseLineHeight","headerFontFamily","concat","bodyFontFamily","overrideStyles","h1,h2,h3,h4,h5,h6","lineHeight","fontFeatureSettings","@media (min-width: 35rem)","fontSize","body","backgroundColor","m","module","exports","require","default","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","children","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","content","property","rel","type","href","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","createElement","InternalPageRenderer","assign","json","propTypes","PropTypes","shape","string","isRequired","map","link","index","key","gatsby_link__WEBPACK_IMPORTED_MODULE_3___default","to","StaticQueryContext","createContext","StaticQuery","props","Consumer","staticQueryData","render","graphql","Error","object","func"],"mappings":"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","file":"component---src-templates-post-jsx-120147c26563a22df0e5.js","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport typography from \"../utils/typography\";\n\nconst Container = styled.section`\n  margin-bottom: ${typography.rhythm(1)};\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-bottom: ${typography.rhythm(1/2)};\n  }\n\n  p,\n  ol,\n  ul,\n  pre,\n  table {\n    margin-bottom: ${typography.rhythm(1)};\n  }\n\n  h1 {\n    font-size: 1.5rem;\n  }\n\n  h2 {\n    font-size: 1.3rem;\n  }\n\n  h3 {\n    font-size: 1.2rem;\n  }\n\n  h4,\n  h5,\n  h6 {\n    font-size: 1rem;\n  }\n\n  a {\n    color: #000;\n  }\n\n  code {\n    margin: 0 0.25rem;\n    font-size: 1rem;\n  }\n\n  img {\n    display: block;\n    width: 80%;\n    margin: 0 auto;\n    box-shadow: 3px 0 3px rgba(0, 0, 0, 0.3), -3px 0 3px rgba(0, 0, 0, 0.3), 0 3px 3px rgba(0, 0, 0, 0.3);\n  }\n\n  pre {\n    padding: ${typography.rhythm(1/2)};\n    background-color: #333;\n    color: #fff;\n    line-height: 1.8;\n    overflow-x: auto;\n  }\n\n  pre > code {\n    margin: 0;\n    font-size: 0.8rem;\n    line-height: 1.5;\n  }\n\n  table {\n    border: 1px solid #333;\n  }\n\n  th,\n  td {\n    padding: 0.25rem;\n    border: 1px solid #333;\n  }\n\n  th {\n    text-align: center;\n  }\n`;\n\nexport default ({ html }) => (\n  <Container dangerouslySetInnerHTML={{ __html: html }} />\n);\n","import React from \"react\";\nimport { DateTime } from \"luxon\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.p`\n  color: rgba(0, 0, 0, 0.54);\n  font-family: SFMono-Regular, Consolas, Monaco, Courier, monospace;\n  font-size: 0.8rem;\n`;\n\nexport default ({ time }) => {\n  const datetime = DateTime.fromISO(time);\n  return (\n    <Container>\n      <time dateTime={datetime.toISO()}>{datetime.toFormat(\"yyyy-MM-dd HH:mm:ss\")}</time>\n    </Container>\n  )\n};\n","import React from \"react\";\nimport path from \"path\";\nimport { graphql } from \"gatsby\";\nimport Container from \"../components/Container\";\nimport Head from \"../components/Head\";\nimport Navigation from \"../components/Navigation\";\nimport PageTitle from \"../components/PageTitle\";\nimport PostContent from \"../components/PostContent\";\nimport PostMetadata from \"../components/PostMetadata\";\n\nconst links = [\n  { title: \"Top\", path: \"/\" },\n  { title: \"Posts\", path: \"/posts/\" }\n];\n\nexport default ({ data }) => {\n  const postID = path.basename(data.markdownRemark.fileAbsolutePath, \".md\");\n\n  return (\n    <Container>\n      <Head\n        title={data.markdownRemark.frontmatter.title}\n        description={data.markdownRemark.frontmatter.description}\n        url={`${data.site.siteMetadata.rootURL}/posts/${postID}.html`}\n        imageURL={`${data.site.siteMetadata.rootURL}/icons/256x256.png`}\n      />\n\n      <PageTitle>{data.markdownRemark.frontmatter.title}</PageTitle>\n      <PostMetadata time={data.markdownRemark.frontmatter.time} />\n      <PostContent html={data.markdownRemark.html} />\n      <Navigation links={links} />\n    </Container>\n  )\n};\n\nexport const query = graphql`\n  query PostQuery($id: String!) {\n    site {\n      siteMetadata {\n        rootURL\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        time\n        description\n      }\n      html\n      fileAbsolutePath\n    }\n  }\n`;\n","import Typography from \"typography\";\n\nconst romanFontFamily = [\n  \"-apple-system\",\n  \"BlinkMacSystemFont\",\n  \"Segoe UI\",\n  \"Roboto\",\n  \"Oxygen\",\n  \"Ubuntu\",\n  \"Cantarell\",\n  \"Fira Sans\",\n  \"Droid Sans\",\n  \"Helvetica Neue\",\n];\nconst japaneseFontFamily = [\n  \"YuGothic\",\n  \"Yu Gothic\",\n  \"Hiragino Kaku Gothic ProN\",\n  \"Meiryo\"\n];\n\nconst typography = new Typography({\n  baseFontSize: \"16px\",\n  baseLineHeight: 2,\n  headerFontFamily: [...romanFontFamily, ...japaneseFontFamily, \"sans-serif\"],\n  bodyFontFamily: [...romanFontFamily, ...japaneseFontFamily, \"sans-serif\"],\n  overrideStyles: () => ({\n    \"h1,h2,h3,h4,h5,h6\": {\n      lineHeight: 1.5,\n      fontFeatureSettings: \"'palt' 1\"\n    },\n    \"@media (min-width: 35rem)\": {\n      html: {\n        fontSize: \"18px\"\n      },\n      body: {\n        backgroundColor: \"#ddd\"\n      }\n    }\n  })\n});\n\nexport default typography;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport typography from \"../utils/typography\";\n\nconst Container = styled.main`\n  padding: ${typography.rhythm(1/2)};\n  background-color: #fff;\n\n  @media (min-width: 35rem) {\n    width: 35rem;\n    margin: ${typography.rhythm(1)} auto;\n    padding: ${typography.rhythm(1)};\n    box-shadow: 0 5px 5px rgba(0,0,0,.1), 3px 0 5px rgba(0,0,0,.1), -3px 0 5px rgba(0,0,0,.1);\n  }\n\n  & *:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport default ({ children }) => (\n  <Container>\n    {children}\n  </Container>\n);\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nexport default ({ title, description, url, imageURL }) => (\n  <Helmet>\n    <title>{title}</title>\n    {description !== null && <meta name=\"description\" content={description} />}\n    <meta name=\"theme-color\" content=\"white\" />\n    <meta property=\"og:type\" content=\"profile\" />\n    <meta property=\"og:title\" content={title} />\n    {description !== null && <meta property=\"og:description\" content={description} />}\n    <meta property=\"og:url\" content={url} />\n    <meta property=\"og:image\" content={imageURL} />\n    <meta property=\"twitter:card\" content=\"summary\" />\n    <meta property=\"twitter:site\" content=\"@naoty_k\" />\n    <meta property=\"twitter:title\" content={title} />\n    {description !== null && <meta property=\"twitter:description\" content={description} />}\n    <meta property=\"twitter:image\" content={imageURL} />\n    <link rel=\"icon\" type=\"image/png\" href=\"/icons/favicon.png\" />\n    <link rel=\"apple-touch-icon\" href=\"/icons/apple-touch-icon.png\" />\n    <link rel=\"canonical\" href={url} />\n    <link rel=\"manifest\" href=\"/manifest.json\" />\n  </Helmet>\n);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import styled from \"@emotion/styled\"\nimport typography from \"../utils/typography\";\n\nexport default styled.h1`\n  margin-bottom: ${typography.rhythm(1/2)};\n  padding-bottom: ${typography.rhythm(1/4)};\n  border-bottom: 1px solid #333;\n`;\n","import React from \"react\";\nimport Link from \"gatsby-link\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.ul`\n  margin-left: 0;\n  list-style: none;\n  text-align: center;\n\n  li {\n    display: inline;\n\n    &:not(:last-child) {\n      margin-right: 0.5rem;\n      padding-right: 0.5rem;\n      border-right: 1px solid #333;\n    }\n  }\n`;\n\nexport default ({ links }) => (\n  <Container>\n    {links.map((link, index) => (\n      <li key={index}><Link to={link.path}>{link.title}</Link></li>\n    ))}\n  </Container>\n);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n"],"sourceRoot":""}